from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
import asyncio

# üîë –í—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω —Å—é–¥–∏
TOKEN = "fuck_you"

bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher()

# üé® –ö–æ–ª—å–æ—Ä–∏ —ñ —Å—Ç–∏–ª—å –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
GOLD_EMOJI = "‚ú®"
BOLD = lambda text: f"<b>{text}</b>"
ITALIC = lambda text: f"<i>{text}</i>"

# üèÅ –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command(commands=["start"]))
async def start_message(message: types.Message):
    text = (
        f"{GOLD_EMOJI} {BOLD('–í—ñ—Ç–∞—é!')} \n\n"
        "–†–∞–¥–∏–π –±–∞—á–∏—Ç–∏ —Ç–µ–±–µ —Ç—É—Ç.\n"
        "–¶–µ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –±–æ—Ç –ø—Ä–æ–µ–∫—Ç—É –∑ –≤–∏—Ç—Ä–∏–º–∞–Ω–∏–º —Ç–µ–º–Ω–∏–º —Å—Ç–∏–ª–µ–º —ñ –Ω–æ—Ç–∫–∞–º–∏ –∑–æ–ª–æ—Ç–∞ üí´\n\n"
        f"{ITALIC('–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –Ω–∏–∂—á–µ:')}"
    )

    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://—Ç–≤—ñ–π_—Å–∞–π—Ç.com"),
        InlineKeyboardButton(text="üíé –ê–∫—Ü—ñ—ó", url="https://—Ç–≤—ñ–π_—Å–∞–π—Ç.com/promo")
    )
    keyboard.add(InlineKeyboardButton(text="üì¨ –ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è", callback_data="subscribe"))

    await message.answer(text, reply_markup=keyboard.as_markup())

# üì© –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è"
@dp.callback_query(lambda c: c.data == "subscribe")
async def subscribe_callback(callback_query: types.CallbackQuery):
    await callback_query.answer("–î—è–∫—É—î–º–æ! –¢–∏ –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–π –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è üíõ", show_alert=True)

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π üöÄ")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
